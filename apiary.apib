FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# MallPay Insurance Application API

<!--
## About

This API description is a work in progress. API is not stabilized yet and may change without notice.

## General Info

Here comes the general info about this RESTfull API.
The API is versioned - the purpose is to enable API development without breaking older versions in use. The version is part of the endpoint URL (ie `/v1/`).

### What's the purpose of this API

This API allows partners to retrieve info about services available for eligible products and operations required to set-up such services for their customers.

### General workflow

1. Log in.
2. Request services available for products specified.
3. Create a contract based on above offer of services.
4. Provide required information for the contract.
5. Activate the contract.
6. Cancel the contract.
7. Contract status information.

## API Endpoints Description

### Authorize

Enables the partner to log in. It is required to use all the other endpoints.

### Request Services

Lets the partner to request available services for products. In order to do so, the partner has to provide information about products they require services for. Endpoint response contains services (and their possible combinations) for the provided products.

### Create Contract

Based on an offer received from Request Services endpoint and their customer choices, enables a partner to create a contract for the services selected. If it was successfully created, response contains information about the created contract, errors explaining what went wrong otherwise.

### Update Contract

Allows a partner to update a previously created non-activated? contract. This may be needed to fill-in certain allowed, previously unknown data at the time of product packaging or shipping - product serial number, for example. Only some parts of the contract may be updated this way.
In case of success, response contains updated contract, errors otherwise.

### Activate Contract

In order for us to be able to fulfill any contract, the contract has to be activated first. This typically happens at the time of product shipping or delivery, depending on partner circumstances.

**NOTE:** Activate Contract also sends contract activation information to customers e-mail address.

### Cancel Contract

Subject to general terms and conditions, a contract can also be canceled. Response contains info if the contract was successfully canceled. If it was not, response contains information why it was not canceled.

**NOTE:** Cancel Contract also sends contract cancellation information message to customers e-mail address.

### Contract Status

Provides information about created contracts and their status. 
-->

<!--
## Authorize [/v1/partner/authorize]

### Request Authorization [POST]
Log in to be able to use other endpoints.

+ Request (application/json; charset=utf-8)
	+ Attributes (AuthorizationRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (AuthorizationResponse)


## Request Services [/v1/services]

### Request Available Services [GET]
Get info on services available for sent products.

+ Request (application/json; charset=utf-8)
	+ Attributes (RequestServicesRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (RequestServicesResponse)


## Create Contract [/v1/contracts]

### Create Contract [POST]
Create a contract based on available services offering.

+ Request (application/json; charset=utf-8)
	+ Attributes (ContractCreateRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (ContractCreateResponse)


## Contract Status [/v1/contracts/{contract_id}]

### Contract Status [GET]
Get status of selected Contract.

+ Request (application/json; charset=utf-8)
	+ Attributes (ContractStatusRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (ContractStatusResponse)


## Update Contract [/v1/contracts/{contract_id}]

### Update Contract [PUT]
Update selected contract.

+ Request (application/json; charset=utf-8)
	+ Attributes (ContractUpdateRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (ContractUpdateResponse)


## Activate Contract [/v1/contracts/{contract_id}/activate]

### Activate Contract [POST]
Activate selected contract.

+ Request (application/json; charset=utf-8)
	+ Attributes (ContractActivateRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (ContractActivateResponse)


## Cancel Contract [/v1/contracts/{contract_id}/cancel]

### Cancel Contract [POST]
Cancel selected contract.

+ Request (application/json; charset=utf-8)
	+ Attributes (ContractCancelRequest)

+ Response 200 (application/json; charset=utf-8)
	+ Attributes (ContractCancelResponse)
-->


<!--
## AuthorizationRequest (object)
Customer consent for processing of personal data according to GDPR. `slug` uniquely defines scope of the consent and purpose of processing, `businessDate` is the datetime customer agreed to the processing of this particular piece of personal data for the purpose defined by `slug`.

### Properties
+ `Property1`: (string)

## AuthorizationResponse (object)

### Properties
+ `Property2`: (string)



## RequestServicesRequest (object)
Customer consent for processing of personal data according to GDPR. `slug` uniquely defines scope of the consent and purpose of processing, `businessDate` is the datetime customer agreed to the processing of this particular piece of personal data for the purpose defined by `slug`.

### Properties
+ `Property3`: (string)

## RequestServicesResponse (object)

### Properties
+ `Property4`: (string)



## ContractCreateRequest (object)
Customer consent for processing of personal data according to GDPR. `slug` uniquely defines scope of the consent and purpose of processing, `businessDate` is the datetime customer agreed to the processing of this particular piece of personal data for the purpose defined by `slug`.

### Properties
+ `Property5`: (string)

## ContractCreateResponse (object)

### Properties
+ `Property6`: (string)



## ContractStatusRequest (object)


### Properties
+ `Property7`: (string)

## ContractStatusResponse (object)

### Properties
+ `Property8`: (string)



## ContractUpdateRequest (object)
Update selected `Contract`. Only allows updating certain contract properties. in case you need to update other properties, which this method does not allow to change, you should request a new services offert and create a new contract.

### Properties
+ `Property9`: (string)

## ContractUpdateResponse (object)

### Properties
+ `Property10`: (string)



## ContractActivateRequest (object)
The contract has to be activated for us to be able to fullfill it.

### Properties
+ `Property11`: (string)

## ContractActivateResponse (object)

### Properties
+ `Property12`: (string)



## ContractCancelRequest (object)
A running `contract` can also be canceled under certain conditions (ie. in 14 days after goods delivery to customer).

### Properties
+ `Property13`: (string)

## ContractCancelResponse (object)

### Properties
+ `Property14`: (string)
-->

